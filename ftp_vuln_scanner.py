import ftplib
import socket

def is_host_reachable(host, port=21, timeout=5):
    try:
        s = socket.create_connection((host, port), timeout)
        s.close()
        return True
    except (socket.timeout, ConnectionRefusedError, OSError) as e:
        print(f"[-] Host {host} is not reachable: {e}")
        return False

def check_anonymous_login(host, timeout=5):
    try:
        ftp = ftplib.FTP()
        ftp.connect(host, timeout=timeout)
        ftp.login()
        print(f"[+] Anonymous login allowed on {host}")
        ftp.quit()
    except ftplib.error_temp as e:
        if "421" in str(e):
            print(f"[-] Anonymous login requires FTPS on {host}")
            check_anonymous_login_ftps(host, timeout)
        else:
            print(f"[-] Error connecting to {host}: {e}")
    except ftplib.error_perm:
        print(f"[-] Anonymous login not allowed on {host}")
    except (socket.timeout, ConnectionRefusedError, OSError) as e:
        print(f"[-] Error connecting to {host}: {e}")

def check_anonymous_login_ftps(host, timeout=5):
    try:
        ftps = ftplib.FTP_TLS()
        ftps.connect(host, timeout=timeout)
        ftps.auth()
        ftps.prot_p()
        ftps.login()
        print(f"[+] Anonymous login allowed on FTPS for {host}")
        ftps.quit()
    except ftplib.error_perm:
        print(f"[-] Anonymous login not allowed on FTPS for {host}")
    except (socket.timeout, ConnectionRefusedError, OSError) as e:
        print(f"[-] Error connecting to FTPS on {host}: {e}")

def check_weak_passwords(host, usernames, passwords, timeout=5):
    for username in usernames:
        for password in passwords:
            try:
                ftp = ftplib.FTP()
                ftp.connect(host, timeout=timeout)
                ftp.login(username, password)
                print(f"[+] Weak credentials found: {username}/{password} on {host}")
                ftp.quit()
                return
            except ftplib.error_perm:
                pass
            except (socket.timeout, ConnectionRefusedError, OSError) as e:
                print(f"[-] Error connecting to {host}: {e}")
                return
    print(f"[-] No weak credentials found on {host}")

def grab_banner(host, port=21, timeout=5):
    try:
        s = socket.create_connection((host, port), timeout)
        banner = s.recv(1024).decode().strip()
        print(f"[+] FTP Banner: {banner}")
        s.close()
    except (socket.timeout, ConnectionRefusedError, OSError) as e:
        print(f"[-] Error grabbing banner from {host}: {e}")
    except Exception as e:
        print(f"[-] Unexpected error grabbing banner from {host}: {e}")

def scan_ftp(host, port=21):
    print(f"Scanning {host} for FTP vulnerabilities...")
    if not is_host_reachable(host, port):
        return
    grab_banner(host, port)
    check_anonymous_login(host)
    usernames = ["admin", "user", "test", "anonymous"]
    passwords = ["12345", "password", "admin", "user", "test", "anonymous"]
    check_weak_passwords(host, usernames, passwords)

if __name__ == "__main__":
    target_host = input("Enter the FTP server address to scan: ")
    scan_ftp(target_host)
