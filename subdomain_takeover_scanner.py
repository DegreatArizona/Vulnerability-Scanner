import requests
import dns.resolver
import argparse

# Known service domains for subdomain takeovers
KNOWN_SERVICE_DOMAINS = {
    "github.io": "GitHub Pages",
    "herokuapp.com": "Heroku",
    "aws.amazon.com": "Amazon AWS",
    "cloudfront.net": "Amazon CloudFront",
    "netlify.app": "Netlify",
    "pages.dev": "Cloudflare Pages",
    "readthedocs.io": "Read the Docs",
    # Add more known services here
}

# Known response indicators for unclaimed services
KNOWN_TAKEOVER_INDICATORS = [
    "There isn't a GitHub Pages site here.",
    "No such app",
    "No such bucket",
    "NoSuchBucket",
    "The specified bucket does not exist",
    "project not found",
    "is not a registered InCloud site",
    # Add more known indicators here
]

def get_cname_record(domain):
    try:
        answers = dns.resolver.resolve(domain, 'CNAME')
        for rdata in answers:
            return str(rdata.target)
    except dns.resolver.NoAnswer:
        return None
    except dns.resolver.NXDOMAIN:
        return None
    except dns.resolver.Timeout:
        return None
    except Exception as e:
        print(f"Error resolving CNAME for {domain}: {e}")
        return None

def check_takeover(domain, cname):
    for service_domain, service_name in KNOWN_SERVICE_DOMAINS.items():
        if service_domain in cname:
            print(f"Checking for potential takeover of {domain} pointing to {service_name} ({cname})...")
            try:
                response = requests.get(f"http://{domain}", timeout=10)
                for indicator in KNOWN_TAKEOVER_INDICATORS:
                    if indicator in response.text:
                        print(f"[!] Potential subdomain takeover vulnerability detected on {domain} ({cname})")
                        return
                print(f"[+] No takeover vulnerability detected on {domain} ({cname})")
            except requests.RequestException as e:
                print(f"Error checking {domain}: {e}")
            return
    print(f"No known service domain detected for {domain} ({cname})")

def main():
    parser = argparse.ArgumentParser(description="Subdomain Takeover Vulnerability Scanner")
    parser.add_argument("domains", nargs="+", help="List of subdomains to check")
    args = parser.parse_args()

    for domain in args.domains:
        cname = get_cname_record(domain)
        if cname:
            check_takeover(domain, cname)
        else:
            print(f"No CNAME record found for {domain}")

if __name__ == "__main__":
    main()
