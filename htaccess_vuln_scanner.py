import requests
import argparse

# Common test URLs for weak .htaccess configurations
test_paths = [
    "/.htaccess",
    "/.git/",
    "/.env",
    "/.svn/",
    "/config/",
    "/admin/",
    "/backup/",
    "/old/",
    "/test/",
    "/dev/",
    "/staging/",
    "/tmp/",
]

def check_weak_htaccess(url):
    for path in test_paths:
        test_url = url + path
        try:
            response = requests.get(test_url)
            print(f"Testing URL: {test_url}")
            if response.status_code == 200:
                print(f"[!] Potential weak .htaccess configuration: {test_url} is accessible")
                print(f"Response:\n{response.text[:200]}")  # Print first 200 characters of the response
                print("="*50)
            else:
                print(f"[+] No issue detected with: {test_url}")
        except requests.RequestException as e:
            print(f"Error accessing {test_url}: {e}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Scanner for Weak .htaccess Configurations")
    parser.add_argument("url", help="Base URL of the target site (e.g., http://example.com)")
    
    args = parser.parse_args()
    
    base_url = args.url.rstrip('/')  # Remove trailing slash if present
    
    check_weak_htaccess(base_url)
